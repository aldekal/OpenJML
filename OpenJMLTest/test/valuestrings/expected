Proving methods in JMLStringTest
Starting proof of JMLStringTest.JMLStringTest() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.JMLStringTest() with prover !!!! - no warnings
Starting proof of JMLStringTest.main(String...) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.main(String...) with prover !!!! - no warnings
Starting proof of JMLStringTest.stringInvariant(string) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.stringInvariant(string) with prover !!!! - no warnings
Starting proof of JMLStringTest.stringBrackets(string,int) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.stringBrackets(string,int) with prover !!!! - no warnings
Starting proof of JMLStringTest.sizeLength(string) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.sizeLength(string) with prover !!!! - no warnings
Starting proof of JMLStringTest.newStringIsEmpty() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.newStringIsEmpty() with prover !!!! - no warnings
Starting proof of JMLStringTest.newStringFromString() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.newStringFromString() with prover !!!! - no warnings
Starting proof of JMLStringTest.emptyLength() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.emptyLength() with prover !!!! - no warnings
Starting proof of JMLStringTest.addBumpsSize(string) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.addBumpsSize(string) with prover !!!! - no warnings
Starting proof of JMLStringTest.addBumpsSize(string,int) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.addBumpsSize(string,int) with prover !!!! - no warnings
Starting proof of JMLStringTest.<T>removeLowersSize(string,int) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.<T>removeLowersSize(string,int) with prover !!!! - no warnings
Starting proof of JMLStringTest.addRemove(string,int) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.addRemove(string,int) with prover !!!! - no warnings
Starting proof of JMLStringTest.addGet1(string,int,int) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.addGet1(string,int,int) with prover !!!! - no warnings
Starting proof of JMLStringTest.addGet2(string,int,int) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.addGet2(string,int,int) with prover !!!! - no warnings
Starting proof of JMLStringTest.addGet(string,int,char) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.addGet(string,int,char) with prover !!!! - no warnings
Starting proof of JMLStringTest.character() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.character() with prover !!!! - no warnings
Starting proof of JMLStringTest.eq1() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.eq1() with prover !!!! - no warnings
Starting proof of JMLStringTest.eqOp1() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.eqOp1() with prover !!!! - no warnings
Starting proof of JMLStringTest.eq2() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.eq2() with prover !!!! - no warnings
Starting proof of JMLStringTest.eq3() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.eq3() with prover !!!! - no warnings
Starting proof of JMLStringTest.eqOp2() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.eqOp2() with prover !!!! - no warnings
Starting proof of JMLStringTest.eqOp3() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.eqOp3() with prover !!!! - no warnings
Starting proof of JMLStringTest.eqOp4() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.eqOp4() with prover !!!! - no warnings
Starting proof of JMLStringTest.conversion1() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.conversion1() with prover !!!! - no warnings
Starting proof of JMLStringTest.conversion1a() with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.conversion1a() with prover !!!! - no warnings
Starting proof of JMLStringTest.conversion2(String) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.conversion2(String) with prover !!!! - no warnings
Starting proof of JMLStringTest.conversion2a(String) with prover !!!!
Feasibility check - end of preconditions : OK
Feasibility check - at program exit : OK
Completed proof of JMLStringTest.conversion2a(String) with prover !!!! - no warnings
Starting proof of JMLStringTest.conversionBad1(@Nullable String,Object) with prover !!!!
test/valuestrings/JMLStringTest.java:164: warning: The prover cannot establish an assertion (NullFormal) in method conversionBad1: arg0 in string(String)
    //@   ghost \string s1 = s; // verification error
                             ^
$SPECS/specs/org/jmlspecs/lang/string.jml:16: warning: Associated declaration
    static public string string(String s);
                                ^
Completed proof of JMLStringTest.conversionBad1(@Nullable String,Object) with prover !!!! - with warnings
Starting proof of JMLStringTest.conversionBad2(@Nullable String,Object) with prover !!!!
test/valuestrings/JMLStringTest.java:168: warning: The prover cannot establish an assertion (NullFormal) in method conversionBad2: arg0 in string(String)
    //@   ghost \string s2 = (\string)s; // verification error
                                      ^
$SPECS/specs/org/jmlspecs/lang/string.jml:16: warning: Associated declaration
    static public string string(String s);
                                ^
Completed proof of JMLStringTest.conversionBad2(@Nullable String,Object) with prover !!!! - with warnings
Starting proof of JMLStringTest.conversionBad3(@Nullable String,Object) with prover !!!!
test/valuestrings/JMLStringTest.java:172: warning: The prover cannot establish an assertion (NullFormal) in method conversionBad3: arg0 in string(String)
    //@   ghost \string s3 = (\string)(s); // verification error
                                       ^
$SPECS/specs/org/jmlspecs/lang/string.jml:16: warning: Associated declaration
    static public string string(String s);
                                ^
Completed proof of JMLStringTest.conversionBad3(@Nullable String,Object) with prover !!!! - with warnings
Completed proving methods in JMLStringTest
6 warnings
